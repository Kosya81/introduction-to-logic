Traceback (most recent call last):
  File "C:\Users\Kosya\PycharmProjects\IntroductionToLogic\.venv\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Kosya\PycharmProjects\IntroductionToLogic\.venv\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Kosya\PycharmProjects\IntroductionToLogic\.venv\lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\Kosya\AppData\Local\Programs\Python\Python39\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\Users\Kosya\PycharmProjects\IntroductionToLogic\.venv\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Kosya\PycharmProjects\IntroductionToLogic\.venv\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Kosya\PycharmProjects\IntroductionToLogic\.venv\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
<script>
document.addEventListener('DOMContentLoaded', function() {
    const table = document.getElementById('likes-table');
    const statements = document.querySelectorAll('.statements-table tr[data-rule]');
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª
    function checkRules() {
        // –ü—Ä–∞–≤–∏–ª–æ 1: –ì–∞–ª–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –í–∏–∫–∞
        const rule1 = table.querySelector('[data-row="–ì–∞–ª—è"][data-col="–í–∏–∫–∞"]').textContent === '‚úîÔ∏è';
        
        // –ü—Ä–∞–≤–∏–ª–æ 2: –ê–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ì–∞–ª—è
        const rule2 = table.querySelector('[data-row="–ê–Ω—è"][data-col="–ì–∞–ª—è"]').textContent !== '‚úîÔ∏è';
        
        // –ü—Ä–∞–≤–∏–ª–æ 3: –ë—ç–ª–ª–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –í–∏–∫–∞ –∏–ª–∏ –ì–∞–ª—è
        const rule3 = table.querySelector('[data-row="–ë—ç–ª–ª–∞"][data-col="–í–∏–∫–∞"]').textContent === '‚úîÔ∏è' || 
                     table.querySelector('[data-row="–ë—ç–ª–ª–∞"][data-col="–ì–∞–ª—è"]').textContent === '‚úîÔ∏è';
        
        // –ü—Ä–∞–≤–∏–ª–æ 4: –ê–Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è —Ç–µ –∂–µ, –∫—Ç–æ –∏ –ë—ç–ª–ª–∞
        const rule4 = Array.from(table.querySelectorAll('[data-row="–ê–Ω—è"].cell')).every((cell, index) => {
            const bellaCell = table.querySelectorAll('[data-row="–ë—ç–ª–ª–∞"].cell')[index];
            return cell.textContent === bellaCell.textContent;
        });
        
        // –ü—Ä–∞–≤–∏–ª–æ 5: –í–∏–∫–µ –Ω—Ä–∞–≤—è—Ç—Å—è —Ç–µ –∂–µ, –∫–æ–º—É –∏ –æ–Ω–∞ —Å–∞–º–∞
        const rule5 = Array.from(table.querySelectorAll('[data-row="–í–∏–∫–∞"].cell')).every((cell, index) => {
            const colName = cell.getAttribute('data-col');
            const otherCell = table.querySelector(`[data-row="${colName}"][data-col="–í–∏–∫–∞"]`);
            return cell.textContent === otherCell.textContent;
        });
        
        // –ü—Ä–∞–≤–∏–ª–æ 6: –ù–∏–∫—Ç–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å–∞–º —Å–µ–±–µ
        const rule6 = Array.from(table.querySelectorAll('.cell')).every(cell => {
            const row = cell.getAttribute('data-row');
            const col = cell.getAttribute('data-col');
            return row !== col || cell.textContent !== '‚úîÔ∏è';
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã
        const rules = [rule1, rule2, rule3, rule4, rule5, rule6];
        statements.forEach((statement, index) => {
            const resultCell = statement.querySelector('.result');
            resultCell.textContent = rules[index] ? '‚úÖ' : '‚ùå';
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ —è—á–µ–π–∫–∞–º
    table.addEventListener('click', function(event) {
        const cell = event.target.closest('.cell');
        if (!cell) return;
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≥–∞–ª–æ—á–∫—É
        cell.textContent = cell.textContent === '‚úîÔ∏è' ? '' : '‚úîÔ∏è';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª–∞
        checkRules();
    });
    
    // –ù–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª
    checkRules();
});
</script>
------------------


[1;36m  Cell [1;32mIn[1], line 1[1;36m[0m
[1;33m    <script>[0m
[1;37m    ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax


